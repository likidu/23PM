/**
 * Generated by orval v6.9.6 üç∫
 * Do not edit manually.
 * Swagger Petstore
 * OpenAPI spec version: 1.0.0
 */
import {
  useMutation
} from '@sveltestack/svelte-query'
import type {
  UseMutationOptions,
  MutationFunction
} from '@sveltestack/svelte-query'
import type {
  InboxList200,
  InboxListBody
} from '.././model'
import { client } from '../../client'

type AwaitedInput<T> = PromiseLike<T> | T;

      type Awaited<O> = O extends AwaitedInput<infer T> ? T : never;


/**
 * @summary Number of items from inbox
 */
export const inboxList = (
    inboxListBody: InboxListBody,
 ) => {
      return client<InboxList200>(
      {url: `/inbox/list`, method: 'post',
      headers: {'Content-Type': 'application/json', },
      data: inboxListBody
    },
      );
    }
  


    export type InboxListMutationResult = NonNullable<Awaited<ReturnType<typeof inboxList>>>
    export type InboxListMutationBody = InboxListBody
    export type InboxListMutationError = unknown

    export const useInboxList = <TError = unknown,
    
    TContext = unknown>(options?: { mutation?:UseMutationOptions<Awaited<ReturnType<typeof inboxList>>, TError,{data: InboxListBody}, TContext>, }
) => {
      const {mutation: mutationOptions} = options ?? {};

      


      const mutationFn: MutationFunction<Awaited<ReturnType<typeof inboxList>>, {data: InboxListBody}> = (props) => {
          const {data} = props ?? {};

          return  inboxList(data,)
        }

      return useMutation<Awaited<ReturnType<typeof inboxList>>, TError, {data: InboxListBody}, TContext>(mutationFn, mutationOptions)
    }
    